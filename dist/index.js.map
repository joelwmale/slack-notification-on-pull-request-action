{"version":3,"file":"index.js","mappingssources":["../webpack://slack-notification-on-pull-request-action/webpack/runtime/compat","../webpack://slack-notification-on-pull-request-action/./dist/main.js"],"sourcesContent":["\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = new URL('.', import.meta.url).pathname.slice(import.meta.url.match(/^file:\\/\\/\\/\\w:/) ? 1 : 0, -1) + \"/\";","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core = __importStar(require(\"@actions/core\"));\nvar fetch = require('node-fetch');\nfunction run() {\n    return __awaiter(this, void 0, void 0, function () {\n        var slackWebhookUrl, slackChannel, slackUsername, pullRequestNumber, pullRequestTitle, pullRequestUrl, pullRequestAuthor, pullRequestAuthorIconUrl, payload;\n        return __generator(this, function (_a) {\n            slackWebhookUrl = core.getInput('SLACK_WEBHOOK_URL') ? core.getInput('SLACK_WEBHOOK_URL') : process.env.SLACK_WEBHOOK_URL;\n            slackChannel = core.getInput('SLACK_CHANNEL') ? core.getInput('SLACK_CHANNEL') : 'general';\n            slackUsername = core.getInput('SLACK_USERNAME') ? core.getInput('SLACK_USERNAME') : 'SlackNotifications';\n            pullRequestNumber = core.getInput('PULL_REQUEST_NUMBER') ? core.getInput('PULL_REQUEST_NUMBER') : process.env.PULL_REQUEST_NUMBER;\n            pullRequestTitle = core.getInput('PULL_REQUEST_TITLE') ? core.getInput('PULL_REQUEST_TITLE') : process.env.PULL_REQUEST_TITLE;\n            pullRequestUrl = core.getInput('PULL_REQUEST_URL') ? core.getInput('PULL_REQUEST_URL') : process.env.PULL_REQUEST_URL;\n            pullRequestAuthor = core.getInput('PULL_REQUEST_AUTHOR') ? core.getInput('PULL_REQUEST_AUTHOR') : process.env.PULL_REQUEST_AUTHOR;\n            pullRequestAuthorIconUrl = core.getInput('PULL_REQUEST_AUTHOR_ICON_URL') ? core.getInput('PULL_REQUEST_AUTHOR_ICON_URL') : process.env.PULL_REQUEST_AUTHOR_ICON_URL;\n            // validate that we have a slack webhook url\n            if (!slackWebhookUrl) {\n                core.setFailed('A slack webhook url is required to run this action.');\n                // error\n                throw new Error('A slack webhook url is required to run this action.');\n            }\n            // initial info\n            core.info(\"Sending slack notification to \".concat(slackWebhookUrl));\n            // debug start\n            core.debug(new Date().toTimeString()); // debug is only output if you set the secret `ACTIONS_RUNNER_DEBUG` to true\n            payload = JSON.stringify({\n                channel: slackChannel,\n                username: slackUsername,\n                attachments: [\n                    {\n                        color: \"#f74ea1\",\n                        blocks: [\n                            {\n                                type: \"section\",\n                                block_id: \"pull_request_details\",\n                                text: {\n                                    type: \"mrkdwn\",\n                                    text: \"*<\".concat(pullRequestUrl, \"|[\").concat(pullRequestNumber, \"] \").concat(pullRequestTitle, \">*\")\n                                }\n                            },\n                            {\n                                type: \"context\",\n                                block_id: \"author\",\n                                elements: [\n                                    {\n                                        type: \"image\",\n                                        image_url: pullRequestAuthorIconUrl,\n                                        alt_text: \"images\"\n                                    },\n                                    {\n                                        type: \"mrkdwn\",\n                                        text: pullRequestAuthor\n                                    }\n                                ]\n                            },\n                            {\n                                type: \"actions\",\n                                elements: [\n                                    {\n                                        type: \"button\",\n                                        text: {\n                                            type: \"plain_text\",\n                                            text: \"View Pull Request\",\n                                            emoji: true\n                                        },\n                                        value: pullRequestTitle,\n                                        url: pullRequestUrl,\n                                        action_id: \"actionId-0\",\n                                        style: \"primary\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            });\n            // make the request\n            make(slackWebhookUrl, payload)\n                .then(function (res) {\n                // if the status code is not 2xx\n                if (res.status >= 400) {\n                    // throw an error\n                    error(res.status);\n                    return;\n                }\n                // output the status\n                core.setOutput('statusCode', res.status);\n                // report on the status code\n                core.info(\"Received status code: \".concat(res.status));\n                // debug end\n                core.info(new Date().toTimeString());\n            })\n                .catch(function (err) {\n                error(err.status);\n                return;\n            });\n            return [2 /*return*/];\n        });\n    });\n}\nfunction make(url, body) {\n    return new Promise(function (resolve, reject) {\n        fetch(url, getOptions('post', body)).then(function (res) { return resolve(res); });\n    });\n}\nfunction getOptions(method, payload) {\n    var options = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        method: method\n    };\n    // set the body\n    options.body = JSON.stringify(payload);\n    return options;\n}\nfunction error(statusCode) {\n    // set the action to failed\n    core.setFailed(\"Received status code: \".concat(statusCode));\n    // throw an error\n    throw new Error(\"Request failed with status code: \".concat(statusCode));\n}\nrun();\n"],"names":[],"sourceRoot":""}